apiVersion: v1alpha1_test
observability:
  metricsEnabled: true
specs:
- name: exampleHook
  entrypointUrl: /webhooks/example
  response:
    formatting:
      templateString: '{{ .Payload }}'
    httpCode: 200
  security:
  - header:
      id: secretHeader
      inputs:
      - name: headerName
        value: X-Hook-Secret
  - compare:
      inputs:
      - name: first
        value: '{{ .Outputs.secretHeader.value }}'
      - name: second
        valueFrom:
          staticRef: test
  formatting:
    templateString: |
      {
        "config": "{{ toJson .Config }}",
        "storage": {{ toJson .Storage }},
        "metadata": {
          "model": "{{ .Request.Header | getHeader "X-Model" }}",
          "event": "{{ .Request.Header | getHeader "X-Event" }}",
          "deliveryID": "{{ .Request.Header | getHeader "X-Delivery" | default "unknown" }}"
        },
        "payload": {{ .Payload }}
      }
  storage:
  - type: postgres
    specs:
      databaseUrl: 'postgresql://postgres:postgres@postgres:5432/postgres'
      useFormattingToPerformQuery: true
      query: |
        INSERT INTO webhooks (payload, config, storage, metadata) VALUES (:payload, :config, :storage, :metadata)
      args:
        payload: '{{ .Payload }}'
        config: '{{ toJson .Config }}'
        storage: '{{ toJson .Storage }}'
        metadata: |
          {
            "model": "{{ .Request.Header | getHeader "X-Model" }}",
            "event": "{{ .Request.Header | getHeader "X-Event" }}",
            "deliveryID": "{{ .Request.Header | getHeader "X-Delivery" | default "unknown" }}"
          }